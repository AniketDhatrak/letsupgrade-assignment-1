1. https://leetcode.com/problems/insert-into-a-binary-search-tree/description/
code-
class Solution {
    public TreeNode insertIntoBST(TreeNode root, int val) {
        if(root==null){
            root = new TreeNode(val);
            return root;
        }
        if(root.val > val){
            root.left =  insertIntoBST(root.left, val);
        }
        else{
            root.right = insertIntoBST(root.right, val);
        }
        return root;
    }
}

2. https://practice.geeksforgeeks.org/problems/delete-a-node-from-bst/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article
code-
  public static  int minValue(Node root, int x){
    
        int min = root.data;
        while(root!=null){
            min = root.data;
            root = root.left;
        }
        
        return min;
    }
}

3. https://practice.geeksforgeeks.org/problems/check-for-bst/1
code-
class Solution
{
    //Function to check whether a Binary Tree is BST or not.
    int min = Integer.MIN_VALUE;
    boolean flag = true;
    void inOrder(Node root) {
        if (root == null) {
            return;
        }
        
        inOrder(root.left);
        
        int a = root.data;
        if (a > min) {
            min = a;
        } else {
            flag = false;
        }
        
        inOrder(root.right);
    }
    
    
    boolean isBST(Node root)
    {
        // code here.
        inOrder(root);
        return flag;
    }
}
