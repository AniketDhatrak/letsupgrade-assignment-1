1. https://www.interviewbit.com/blog/tower-of-hanoi/
code-
import java.util.Scanner;

public class TowerOfHanoi {
    public void solveTowerOfHanoi(int n, char source, char auxiliary, char destination) {
        if (n == 1) {
            System.out.println("Move disk 1 from " + source + " to " + destination);
            return;
        }
        
        solveTowerOfHanoi(n - 1, source, destination, auxiliary);
        System.out.println("Move disk " + n + " from " + source + " to " + destination);
        solveTowerOfHanoi(n - 1, auxiliary, source, destination);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of disks: ");
        int n = scanner.nextInt();

        TowerOfHanoi towerOfHanoi = new TowerOfHanoi();
        towerOfHanoi.solveTowerOfHanoi(n, 'A', 'B', 'C');
    }
}

2. https://leetcode.com/problems/gray-code/
code-
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> result = new ArrayList<>();
        int numCodes = 1 << n; // Calculate 2^n
        
        for (int i = 0; i < numCodes; i++) {
            int grayCode = i ^ (i >> 1);
            result.add(grayCode);
        }
        
        return result;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the value of n: ");
        int n = scanner.nextInt();

        Solution solution = new Solution();
        List<Integer> grayCodes = solution.grayCode(n);

        System.out.println("Gray Code Sequence: " + grayCodes);
    }
}


3. https://leetcode.com/problems/k-th-symbol-in-grammar/
code-
import java.util.Scanner;

class Solution {
    public int kthGrammar(int n, int k) {
        if (n == 1) {
            return 0;
        }
        
        int mid = 1 << (n - 2);
        
        if (k <= mid) {
            return kthGrammar(n - 1, k);
        } else {
            return 1 - kthGrammar(n - 1, k - mid);
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the value of n: ");
        int n = scanner.nextInt();

        System.out.print("Enter the value of k: ");
        int k = scanner.nextInt();

        Solution solution = new Solution();
        int result = solution.kthGrammar(n, k);

        System.out.println("Kth symbol in the nth row: " + result);
    }
}
